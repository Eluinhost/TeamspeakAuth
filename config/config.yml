imports:
    - { resource: parameters.yml }

parameters:
  console.command.ids:
  - server_start
  - schema_update
  - nuke_group
  - clean_cache
  - clean_container
  - clean_routing
  - clean_skins
  - clean_templates
  - update_config

services:
  #site services
  minecrafthelper:
    class: PublicUHC\TeamspeakAuth\Helpers\DefaultMinecraftHelper
    arguments: ['@skinfetcher']
    lazy: true
  teamspeakhelper:
    class: PublicUHC\TeamspeakAuth\Helpers\DefaultTeamspeakHelper
    arguments: ['@teamspeakserver', '@entityManager', '%teamspeak.group_id%', '@minecrafthelper']
    lazy: true
  teamspeakserver:
    class: TeamSpeak3_Node_Server
    factory_class: TeamSpeak3
    factory_method: factory
    arguments: ['serverquery://%teamspeak.username%:%teamspeak.password%@%teamspeak.host%:%teamspeak.query_port%/?server_port=%teamspeak.port%']
    lazy: true
  annotationmetadata:
    class: Doctrine\Common\Cache\CacheProvider
    factory_class: Doctrine\ORM\Tools\Setup
    factory_method: createAnnotationMetadataConfiguration
    arguments: [['%kernel.root_dir%/src'], true]
  entityManager:
    class: Doctrine\ORM\EntityManager
    factory_class: Doctrine\ORM\EntityManager
    factory_method: create
    arguments: [{driver: 'pdo_mysql', user: '%database.username%', password: '%database.password%', dbname: '%database.database%'}, '@annotationmetadata']
    lazy: true
  skindownloader:
    class: PublicUHC\SkinCache\Downloaders\MinotarLikeDownloader
    arguments: ['@skinclient', 30]
  skinclient:
    class: GuzzleHttp\Client
    arguments: [{base_url: 'https://minotar.net'}]
  skinformatter:
    class: PublicUHC\SkinCache\Formatters\HttpResponseFormatter
  skincache:
    class: Stash\Pool
    arguments: ['@skincachedriver']
  skincachedriver:
    class: Stash\Driver\FileSystem
    arguments: [{path: '%kernel.root_dir%/cache/skins'}]
  errorimagepainter:
    class: PublicUHC\SkinCache\Painters\TransparentImagePainter
  skinfetcher:
    class: PublicUHC\SkinCache\SkinFetcher
    arguments: ['@skindownloader', '@skinformatter', '@skincache', '@errorimagepainter', '%skinCacheTime%']
    lazy: true

  #routes
  config_locator:
    class: Symfony\Component\Config\FileLocator
    arguments: ['%kernel.root_dir%/config']
  routing_loader:
    class: Symfony\Component\Routing\Loader\YamlFileLoader
    arguments: ['@config_locator']
  router:
    class: Symfony\Component\Routing\Router
    arguments: ['@routing_loader', 'routes.yml', {cache_dir: '%kernel.root_dir%/cache/routing'}]
    calls:
      - [setContext, ['@request_context']]
  controller_resolver:
    class: PublicUHC\TeamspeakAuth\Controllers\ControllerResolver
    arguments: ['@service_container']

  #request based
  request:
    synthetic: true
  request_context:
    class: Symfony\Component\Routing\RequestContext
    calls:
      - [fromRequest, ['@request']]
  listener.router:
    class: Symfony\Component\HttpKernel\EventListener\RouterListener
    arguments: ['@router']
  listener.response:
    class: Symfony\Component\HttpKernel\EventListener\ResponseListener
    arguments: ['UTF-8']
  listener.exception:
    class: Symfony\Component\HttpKernel\EventListener\ExceptionListener
    arguments: ['PublicUHC\TeamspeakAuth\Controllers\ExceptionController::onException']

  #kernel stuffs
  event_dispatcher:
    class: Symfony\Component\EventDispatcher\ContainerAwareEventDispatcher
    arguments: ['@service_container']
    calls:
      - [addSubscriberService, ['listener.router', 'Symfony\Component\HttpKernel\EventListener\RouterListener']]
      - [addSubscriberService, ['listener.response', 'Symfony\Component\HttpKernel\EventListener\ResponseListener']]
      - [addSubscriberService, ['listener.exception', 'Symfony\Component\HttpKernel\EventListener\ExceptionListener']]
  framework:
    class: PublicUHC\TeamspeakAuth\Kernel\ProjectFramework
    arguments: ['@event_dispatcher', '@service_container', '@controller_resolver']
    lazy: true

  #templating
  template_loader:
    class: Twig_Loader_Filesystem
    arguments: ['%kernel.root_dir%/templates']
  haml_environment:
    class: MtHaml\Environment
    arguments: ['twig', {enable_escaper: false}]
  haml_template_loader:
    class: MtHaml\Support\Twig\Loader
    arguments: ['@haml_environment', '@template_loader']
  routing_extension:
    class: Symfony\Bridge\Twig\Extension\RoutingExtension
    arguments: ['@router']
  assets_vendor_path_package:
    class: Symfony\Component\Templating\Asset\PathPackage
    arguments: ['vendor']
  assets_helper:
    class: Symfony\Component\Templating\Helper\AssetsHelper
    arguments: ['/']
    calls:
      - [addPackage, ['vendor', '@assets_vendor_path_package']]
  assets_extension:
    class: PublicUHC\TeamspeakAuth\Extensions\AssetExtension
    arguments: ['@assets_helper']
  haml_extension:
    class: MtHaml\Support\Twig\Extension
    arguments: ['@haml_environment']
  template_environment:
    class: Twig_Environment
    arguments: ['@haml_template_loader', {cache: '%kernel.root_dir%/cache/templates'}]
    calls:
      - [addExtension, ['@routing_extension']]
      - [addExtension, ['@assets_extension']]
      - [addExtension, ['@haml_extension']]
      - [addGlobal, ['siteName', '%siteName%']]
  template_name_parser:
    class: Symfony\Component\Templating\TemplateNameParser
  templating:
    class: Symfony\Bridge\Twig\TwigEngine
    arguments: ['@template_environment', '@template_name_parser']
    lazy: true

  #console stuffs
  console_application:
    class: Symfony\Component\Console\Application
    calls:
      - [add, ['@nuke_group']]
      - [add, ['@server_start']]
      - [add, ['@schema_update']]
    lazy: true
  #commands
  nuke_group:
    class: PublicUHC\TeamspeakAuth\Commands\NukeGroupCommand
    arguments: ['@teamspeakhelper', '@entityManager']
  server_start:
    class: PublicUHC\TeamspeakAuth\Commands\ServerStartCommand
    arguments: ['@auth_server', '@entityManager', '@server_loop', '%database.keepAlive%', '%minecraft.description%', '%kernel.root_dir%/web/images/servericon.png']
  schema_update:
    class: PublicUHC\TeamspeakAuth\Commands\UpdateSchemaCommand
    arguments: ['@entityManager']
  clean_cache:
    class: PublicUHC\TeamspeakAuth\Commands\CleanCacheCommand
    arguments: ['%kernel.root_dir%']
  clean_container:
    class: PublicUHC\TeamspeakAuth\Commands\CleanContainerCommand
    arguments: ['%kernel.root_dir%', '%kernel.environment%']
  clean_routing:
    class: PublicUHC\TeamspeakAuth\Commands\CleanRoutingCommand
    arguments: ['%kernel.root_dir%']
  clean_skins:
    class: PublicUHC\TeamspeakAuth\Commands\CleanSkinsCommand
    arguments: ['%kernel.root_dir%']
  clean_templates:
    class: PublicUHC\TeamspeakAuth\Commands\CleanTemplatesCommand
    arguments: ['%kernel.root_dir%']
  update_config:
    class: PublicUHC\TeamspeakAuth\Commands\UpdateConfigCommand

  #auth server stuff
  server_loop:
    class: React\EventLoop\LoopInterface
    factory_class: React\EventLoop\Factory
    factory_method: create
  auth_server:
    class: PublicUHC\MinecraftAuth\AuthServer\AuthServer
    arguments: ['%minecraft.port%', '%minecraft.host%', '@server_loop']
    lazy: true
